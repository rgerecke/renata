get_dictionary <- function(data) {
require(haven)
require(tibble)
require(purrr)
require(dplyr)
require(tidyr)
if (some(data, is.labelled)==FALSE) {stop("Not a labelled data set")}
map(data, attributes) %>%
enframe(name = "variable") %>%
mutate(value = map(value, ~enframe(., name = "class"))) %>%
unnest() %>%
complete(variable, class) %>%
spread(class, value)
}
library(haven)
> df <- read_sav("blog/static/data/2019-01-20_sample-data.sav")
library(haven)
> df <- read_sav("Desktop/r-things/blog/static/data/2019-01-20_sample-data.sav")
library(haven)
df <- read_sav("Desktop/r-things/blog/static/data/2019-01-20_sample-data.sav")
library(haven)
df <- read_sav("~/Desktop/r-things/blog/static/data/2019-01-20_sample-data.sav")
get_dictionary(df)
get_dictionary(df) %>% unnest
get_dictionary(df) %>% map(length)
get_dictionary(df) %>% map(~length(unnest(.)))
get_dictionary(df) %>% map_if(is.list, ~length(unnest(.)))
get_dictionary <- function(data) {
require(haven)
require(tibble)
require(purrr)
require(dplyr)
require(tidyr)
if (some(data, is.labelled)==FALSE) {stop("Not a labelled data set")}
map(data, attributes) %>%
enframe(name = "variable") %>%
mutate(value = map(value, ~enframe(., name = "class"))) %>%
unnest() %>%
complete(variable, class)
}
get_dictionary(df)
usethis::use_data(df)
spss_data = df
usethis::use_data(spss_data)
?enframe
mutate
?unnest
?complete
devtools::document()
devtools::document()
devtools::document()
usethis::use_readme_md()
devtools::document()
